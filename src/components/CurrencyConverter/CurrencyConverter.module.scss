@use '../../styles/variables' as *;

.currencyConverterWrapper { 
  background-color: var(--background-color);
  transition: background-color 0.5s, color 0.5s;
  border-radius: 0.5rem;
  box-shadow: 0 0.25rem 0.5rem 0 $shadow-grey-1, 0 0.375rem 1.25rem 0 $shadow-grey-2;
  padding: $spacing-md;
  margin: 0 1rem;
  max-width: $app-width-mobile;

  @media (min-width: $breakpoint-mobile) and (max-width: $breakpoint-desktop) {
    margin: 0 auto;
    max-width: $app-width-mobile;
  }
  
  @media (min-width: $breakpoint-desktop) {
    margin: 0 auto;
    max-width: $app-width-desktop;
  }

.formContainer {
  display: flex;
  flex-direction: column;
  gap: 1.5rem;
  align-items: flex-start;

  @media (min-width: $breakpoint-desktop) {
    flex-direction: row;
    align-items: flex-end;
    justify-content: space-between;
    gap: 1.5rem;
  }

  .formField {
    display: flex;
    flex-direction: column;
    align-items: flex-start;
    width: 100%;

    .formFieldLabel {
      font-size: $font-md;
      color: var(--label-color);
      padding-bottom: $spacing-xs;
    }

    .currencyInput,
    .currencyDropdown {
      border: 1px solid var(--input-border);
      border-radius: 0.25rem;
      background-color: var(--input-background);
      transition: border-color 0.2s ease, box-shadow 0.2s ease;
      width: 100%;
      min-width: 17.5rem;
      &:hover {
        border-color: var(--primary-color);
      }

      &:focus-within,
      &:focus {
        border: 1px solid var(--input-focus);
        box-shadow: 0 0 0 3px var(--focus-shadow);
        outline: none;
      }
    }

    .currencyInput {
      padding: $spacing-sm;
      font-size: $font-md;
      color: var(--input-value);
    }

    .currencyDropdown {
      display: flex;
      align-items: center;
      gap: 0.5rem;
      padding: 0.5rem 1rem;
      position: relative;

      .flag {
        width: 1.5rem;
        height: 1.5rem;
        object-fit: cover;
        border-radius: 0.125rem;
        flex-shrink: 0;
      }

      .selectWrapper {
        position: relative;
        flex: 1;
        text-align: left;
        .selectInput {          
          border: none;
          background: transparent;
          font-size: $font-md;
          font-family: inherit;
          color: var(--input-value);
          padding: 0.5rem 2rem 0.5rem 0.25rem;
          appearance: none;
          outline: none;
          cursor: pointer;
        }

        &::after {
          content: '';
          position: absolute;
          right: 0.25rem;
          top: 50%;
          transform: translateY(-50%) rotate(0deg);
          width: 1.25rem;
          height: 1.25rem;
          pointer-events: none;
          background-image: $dropdown-arrow-icon;
          background-size: contain;
          background-repeat: no-repeat;
          background-position: center;
          transition: transform 0.2s ease;
        }        
      }
      &:focus-within {        
        .selectWrapper::after {
          transform: translateY(-50%) rotate(180deg); // TODO: Fix on selection 
        }
      }
    }
    .visuallyHidden {
      position: absolute;
      width: 1px;
      height: 1px;
      padding: 0;
      margin: -1px;
      overflow: hidden;
      clip: rect(0 0 0 0);
      white-space: nowrap;
      border: 0;
    }
  }
}

.result {
  background-color: var(--result-background);
  border: 2px solid var(--primary-color);
  border-radius: 0.313rem;
  margin-top: 1.813rem;
  padding: 0.5rem 1.281rem;  
  text-align: left;
  &:focus {
    outline: none;
    border-color: var(--input-focus);
    box-shadow: 0 0 0 3px var(--focus-shadow);
  }

  .resultBase {
    background-color: var(--primary-color);
    padding: 0.25rem 0.75rem;
    color: var(--secondary-color);
    border-radius: 0.25rem;
    font-size: $font-md;
    .resultBaseValue {
      padding-right: $spacing-xs;
    }
  } 
  .resultValue {
    color: var(--result-value);
    font-size: $font-lg;
    font-weight: 500;
  }
  }
}